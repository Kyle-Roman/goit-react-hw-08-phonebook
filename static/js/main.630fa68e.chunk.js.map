{"version":3,"sources":["Components/Navigation/Navigation.module.css","Components/Form/Form.module.css","Components/ContactList/ContactList.module.css","Components/UserMenu/UserMenu.module.css","Components/Filter/Filter.module.css","Components/views/ViewsStyles.module.css","App.module.css","redux/auth/authActions.js","redux/auth/authSelectors.js","redux/auth/authSlice.js","Components/Navigation/Navigation.js","account.png","Components/UserMenu/UserBar.js","Components/Navigation/AuthNavigation.js","Components/Navigation/AppBar.js","Components/views/Homeview.js","Components/views/Loginview.js","Components/views/Registerview.js","Components/api/api.js","redux/actions.js","redux/reducers.js","Components/Form/Form.js","redux/selector.js","Components/ContactList/ContactsList.js","Components/Filter/Filter.js","Components/views/Usersview.js","Components/Routes/PublicRoute.js","Components/Routes/PrivateRoute.js","App.js","redux/phonebook-reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","alert","message","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","operations","authSelectors","getUserName","user","name","getIsLoggedIn","isLoggedIn","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authActions","fulfilled","action","payload","pending","rejected","Navigation","useSelector","to","className","s","link","activeclassname","activeLink","UserMenu","dispatch","useDispatch","avatar","userAvatar","container","src","alt","width","button","onClick","AuthNav","AppBar","header","HomeView","title","subtitle","LoginView","useState","setEmail","password","setPassword","handleChange","target","value","suptitle","onSubmit","e","preventDefault","form","autoComplete","label","type","onChange","RegisterView","setName","addContact","contact","deleteContactRequest","createAction","deleteContactSuccess","deleteContactError","filterContacts","fetchContacts","number","phonebookApi","Form","setNumber","handleInput","currentTarget","reset","reducers","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","pattern","required","placeholder","input","getFilter","contacts","filter","getContacts","createSelector","items","normalizedFilter","toLowerCase","trim","includes","ContactsList","selectors","onDelete","id","contactId","phonebookActions","delete","then","catch","error","list","map","list_item","Filter","wrapper","Usersview","contactName","setContactName","useEffect","contactsReducers","PublicRoute","children","restricted","redirectTo","PrivateRoute","App","app","exact","path","element","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phonebookReducers","persistor","persistStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.630fa68e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navigation_header__2DW2t\",\"link\":\"Navigation_link__16Txn\",\"activeLink\":\"Navigation_activeLink__3pnIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3zCde\",\"label\":\"Form_label__1TmkH\",\"input\":\"Form_input__1rPQJ\",\"button\":\"Form_button__2gh7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3cRrV\",\"list_item\":\"ContactList_list_item__1-SbK\",\"name\":\"ContactList_name__234PS\",\"number\":\"ContactList_number__3WRLT\",\"button\":\"ContactList_button__UY7gq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1Dnce\",\"avatar\":\"UserMenu_avatar__3mFPI\",\"name\":\"UserMenu_name__3vpUU\",\"button\":\"UserMenu_button__1y0w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__dO4uZ\",\"label\":\"Filter_label__3x4HT\",\"input\":\"Filter_input__19A4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewsStyles_container__3U6w0\",\"form\":\"ViewsStyles_form__3sjAX\",\"label\":\"ViewsStyles_label__2_xf_\",\"title\":\"ViewsStyles_title__20peA\",\"suptitle\":\"ViewsStyles_suptitle__2gsqb\",\"subtitle\":\"ViewsStyles_subtitle__2exPq\",\"button\":\"ViewsStyles_button__3qwCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ipdD\",\"title\":\"App_title__rT0ip\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/signup\", credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    alert(error.message);\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\", credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    alert(error.message);\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n  } catch (error) {\r\n    alert(error.message);\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      return data;\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  fetchCurrentUser,\r\n};\r\n\r\nexport default operations;\r\n\r\n// import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const register = createAction('auth/signUp', user => ({\r\n//     payload: {\r\n//       name: user.name,\r\n//       email: user.email,\r\n//       password: user.password,\r\n//   }\r\n// }));\r\n\r\n// const logIn = createAction('auth/logIn');\r\n\r\n// const logOut = createAction('auth/logOut');\r\n\r\n// const fetchCurrentUser = createAction('auth/refresh')\r\n\r\n// const authActions = { register, logIn, logOut, fetchCurrentUser };\r\n\r\n// export default authActions;","const getUserName = (state) => state.auth.user.name;\r\nconst getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nconst getIsFetchingCurrent = (state) => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getUserName,\r\n  getIsLoggedIn,  \r\n  getIsFetchingCurrent,\r\n};\r\nexport default authSelectors;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authActions from './authActions';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [authActions.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authActions.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authActions.logOut.fulfilled](state, _) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authActions.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authActions.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authActions.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },    \r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" className={s.link} activeclassname={s.activeLink}>\r\n        Home\r\n      </NavLink>\r\n    {isLoggedIn && (\r\n      <NavLink to=\"/contacts\" className={s.link} activeclassname={s.activeLink}>\r\n        Phonebook\r\n      </NavLink>\r\n    )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/account.152e4568.png\";","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSelectors, authActions } from \"../../redux/auth\";\r\nimport userAvatar from \"../../account.png\";\r\nimport s from \"./UserMenu.module.css\";\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const avatar = userAvatar;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\r\n      <span className={s.name}>Welcome, {name}</span>\r\n      <button className={s.button} onClick={() => dispatch(authActions.logOut())}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navigation.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/register\" className={s.link}>\r\n        Sign up\r\n      </NavLink>\r\n      <NavLink to=\"/login\" className={s.link}>\r\n        Log in\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserBar from \"../UserMenu/UserBar\";\r\nimport AuthNavigation from \"./AuthNavigation\";\r\nimport s from './Navigation.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserBar /> : <AuthNavigation />}\r\n    </header>\r\n  );\r\n}","import React from \"react\";\r\nimport s from '../views/ViewsStyles.module.css';\r\n\r\nconst HomeView = () => (\r\n  <div className={s.container}>\r\n    <h1 className={s.title}>\r\n      Welcome!<br /> Here you can create your own phonebook!\r\n    </h1>\r\n    <h2 className={s.subtitle}>\r\n      Please <b>sign up</b> or <b>log in</b> to continue.\r\n    </h2>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../../redux/auth\";\r\nimport s from './ViewsStyles.module.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authActions.logIn({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h3 className={s.title}><span className={s.suptitle}>Log in</span><br/>To continue please fill in the form</h3>\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          e-mail\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authActions } from '../../redux/auth';\r\nimport s from './ViewsStyles.module.css';\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authActions.register({ name, email, password }));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h3 className={s.title}><span className={s.suptitle}>Sign up</span><br />\r\n        Please fill in the sign up form\r\n      </h3>\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          Name\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n        <label className={s.label}>\r\n          E-mail\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Sign up\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  return await axios.post(`./contacts`, contact);\r\n}\r\n\r\nexport async function deleteContact(contactId) {\r\n  return await axios.delete(`./contacts/${contactId}`);\r\n}\r\n// import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n// export const phonebookApi = createApi({\r\n//   reducerPath: 'phonebookApi',\r\n//   baseQuery: fetchBaseQuery({ baseUrl: 'https://connections-api.herokuapp.com' }),\r\n//   tagTypes:['contacts'],\r\n//   endpoints: (builder) => ({\r\n//     getContacts: builder.query({\r\n//       query: () => `/contacts`,\r\n//       providesTags: ['contacts'],\r\n//     }),\r\n//     addContact: builder.mutation({\r\n//       query: (newContact) => ({\r\n//         url: `/contacts`,\r\n//         method: 'POST',\r\n//         body: {\r\n//           name: newContact.name,\r\n//           number: newContact.number,\r\n//         },\r\n//       }),\r\n//       invalidatesTags: ['contacts'],\r\n//     }),\r\n//     deleteContact: builder.mutation({\r\n//       query: (contactId) => ({\r\n//         url: `/contacts/${contactId}`,\r\n//         method: 'DELETE',\r\n//       }),\r\n//       invalidatesTags: ['contacts'],\r\n//     }),\r\n//     getFilteredContacts: builder.query({\r\n//       query: (name) => `/contacts?name=${name}`,\r\n//       invalidatesTags: ['contacts'],\r\n//     }),\r\n//   }),\r\n// });\r\n\r\n// export const {\r\n//   useGetContactsQuery,\r\n//   useGetFilteredContactsQuery,\r\n//   useDeleteContactMutation,\r\n//   useAddContactMutation } = phonebookApi;","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const filterContacts = createAction(\"contacts/filterContacts\");","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as phonebookApi from '../Components/api/api';\r\nimport * as phonebookActions from \"./actions\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/contacts\");\r\n      return data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async ({ name, number }) => {\r\n    const contact = { name, number };\r\n    try {\r\n      const { data } = await phonebookApi.addContact(contact);\r\n      return data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(phonebookActions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(phonebookActions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(phonebookActions.deleteContactError(error)));\r\n};","import React, { useState} from \"react\";\r\nimport { toast } from 'react-toastify';\r\nimport * as reducers from '../../redux/reducers';\r\nimport { useDispatch } from \"react-redux\";\r\nimport s from './Form.module.css'\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n   const dispatch = useDispatch();\r\n\r\n  const handleInput = e => {\r\n    const {name, value} = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(reducers.addContact({ name, number }));\r\n    reset();\r\n    toast.success('Contact added!', {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    }); \r\n  }\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n    }\r\n\r\n  return (\r\n    <div className={s.form}>\r\n            <form onSubmit={handleSubmit}>\r\n              <label className={s.label}>Name\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                  onChange={handleInput}\r\n                  required\r\n                  placeholder='add name...'\r\n                  className={s.input}\r\n              />\r\n              </label>\r\n            <label className={s.label}>Phone number\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                onChange={handleInput}\r\n                required\r\n                placeholder='add number...'\r\n                className={s.input}\r\n              />\r\n            </label>\r\n              <button type=\"submit\" className={s.button} title='Добавить новый контакт'>Add contact</button>\r\n      </form>\r\n      \r\n    </div>\r\n    \r\n  )\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSubmit: (value) => dispatch(phonebookActions.addContact(value)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(Form);","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase().trim(\" \");\r\n\r\n      return contacts.filter(({ name }) =>\r\n          name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as selectors from '../../redux/selector';\r\nimport * as reducers from '../../redux/reducers';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const contacts = useSelector(selectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = (id) =>\r\n    dispatch(reducers.deleteContact(id));\r\n\r\n  return (\r\n    <div>\r\n      <ul className={s.list}>\r\n                {contacts.map(({ id, name, number }) => (\r\n                  <li key={id} className={s.list_item}>\r\n                    <span className={s.name}>{name}</span>\r\n                    <span className={s.number}>{number}</span>\r\n                    <button type=\"button\" id={id} onClick={() => onDelete(id)} className={s.button}>Delete</button>\r\n                  </li>\r\n                  \r\n                )\r\n                )}\r\n      </ul>\r\n    </div>)\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   const { items, filter } = state.phonebook;\r\n//   const avaliableContacts = getAvaliableContacts(items, filter);\r\n//   return {\r\n//     contacts: avaliableContacts,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onDelete: (value) => dispatch(phonebookActions.deleteContact(value)),\r\n// });\r\n\r\n// const getAvaliableContacts = (items, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return items.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import React from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as selectors from '../../redux/selector';\r\nimport * as phonebookActions from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n\r\n  const value = useSelector(selectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <label className={s.label}>Find contact\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={value}\r\n          onChange={(e) =>\r\n            dispatch(phonebookActions.filterContacts(e.target.value))\r\n          }\r\n          className={s.input}\r\n          placeholder='type in name...'\r\n        />\r\n      </label>\r\n    </div>\r\n      )    \r\n};\r\n  \r\n// const mapStateToProps = (state) => ({\r\n//   value: state.phonebook.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onChange: (event) =>\r\n//     dispatch(phonebookActions.filterContacts(event.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Form from '../Form/Form';\r\nimport ContactsList from '../ContactList/ContactsList';\r\nimport Filter from '../Filter/Filter';\r\nimport s from './ViewsStyles.module.css';    \r\nimport * as contactsReducers from '../../redux/reducers';\r\n\r\nexport default function Usersview() {\r\n  const [contactName, setContactName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(contactsReducers.fetchContacts()), [dispatch]);\r\n  \r\n  const onFilterChange = (e) => {\r\n    setContactName(e.currentTarget.value);\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className={s.title}>Add your contacts here</h1>\r\n            <Form />\r\n            <h2 className={s.title}>Phonebook</h2>\r\n            <Filter onChange={onFilterChange} value={contactName} />\r\n            <ContactsList />\r\n        </div>\r\n    );    \r\n};","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = \"/\",\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return shouldRedirect ? <Navigate to={redirectTo} /> : children;\r\n};","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nexport default function PrivateRoute({ children, redirectTo = \"/\" }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return isLoggedIn ? children : <Navigate to={redirectTo} />;\r\n}","import React, { useEffect } from 'react';\n\nimport AppBar from './Components/Navigation/AppBar';\nimport HomeView from './Components/views/Homeview';\nimport LoginView from './Components/views/Loginview';\nimport RegisterView from './Components/views/Registerview';\nimport UserView from './Components/views/Usersview';\n\nimport s from './App.module.css';\nimport { Route, Routes } from 'react-router-dom';\nimport PublicRoute from './Components/Routes/PublicRoute';\nimport PrivateRoute from './Components/Routes/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authActions, authSelectors } from './redux/auth';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authActions.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingCurrentUser && <div className={s.app}>\n      <AppBar />\n      \n      <Routes>\n        <Route exact path=\"/\" element={\n              <PublicRoute>\n                <HomeView />\n              </PublicRoute>\n            } />\n        <Route exact path=\"/login\" element={\n              <PublicRoute restricted redirectTo=\"/contacts\">\n                <LoginView />\n              </PublicRoute>\n            }/>\n        <Route exact path=\"/register\" element={\n              <PublicRoute restricted>\n                <RegisterView />\n              </PublicRoute>\n            }/>\n        <Route exact path=\"/contacts\" element={\n              <PrivateRoute redirectTo=\"/login\">\n                <UserView />\n              </PrivateRoute>\n            }/>\n      </Routes>\n    </div>);    \n};\n   ","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { fetchContacts, addContact } from \"./reducers\";\r\nimport { filterContacts, deleteContactSuccess } from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\r\n  [deleteContactSuccess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport phonebookReducers from './phonebook-reducer';\r\nimport authReducer from './auth/authSlice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: phonebookReducers,\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport {store, persistor} from './redux/store';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}